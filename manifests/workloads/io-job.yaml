apiVersion: batch/v1
kind: Job
metadata:
  name: io-job
  labels:
    app: io-job
  annotations:
    slo.hybrid.io/class: "batch"
    slo.hybrid.io/deadlineMs: "180000"
    # slo.hybrid.io/max-offload-penalty.ms: "1200"
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: io-job
        scheduling.hybrid.io/managed: "true"
    spec:
      restartPolicy: Never
      containers:
        - name: io
          image: curlimages/curl:8.10.1
          env:
            - name: BYTES_MB
              value: "100"
            - name: WR_COPIES
              value: "3"
            - name: URLS
              value: "https://speed.hetzner.de/100MB.bin https://proof.ovh.net/files/100Mb.dat"
            - name: RETRIES_PER_URL
              value: "5"
            - name: CONNECT_TIMEOUT
              value: "3"
            - name: MAX_TIME
              value: "120"
          command:
            - sh
            - -c
            - |
              set -e
              mkdir -p /work
              echo "IO job starting..."

              ok=""
              for u in $URLS; do
                i=1
                while [ $i -le ${RETRIES_PER_URL:-5} ]; do
                  echo "Downloading $u (attempt $i/${RETRIES_PER_URL:-5})..."
                  if curl -L --fail --connect-timeout ${CONNECT_TIMEOUT:-3} --max-time ${MAX_TIME:-120} -o /work/blob.bin "$u"; then
                    ok="yes"
                    break
                  fi
                  sleep 2
                  i=$((i+1))
                done
                [ -n "$ok" ] && break
              done

              if [ -z "$ok" ]; then
                echo "All downloads failed - generating ${BYTES_MB:-100}MB locally"
                dd if=/dev/urandom of=/work/blob.bin bs=1M count=${BYTES_MB:-100} status=none
              fi

              echo "Checksum:"
              sha256sum /work/blob.bin || true

              i=1
              while [ $i -le ${WR_COPIES:-3} ]; do
                echo "Writing copy $i with oflag=direct..."
                dd if=/work/blob.bin of=/work/copy_${i}.bin bs=4M oflag=direct status=none
                i=$((i+1))
              done

              echo "Reading back copies..."
              cat /work/copy_*.bin >/dev/null 2>&1 || true

              echo "IO job done."
          resources:
            requests: { cpu: "300m", memory: "256Mi" }
            limits:   { cpu: "800m", memory: "512Mi" }
          volumeMounts:
            - name: work
              mountPath: /work
      volumes:
        - name: work
          emptyDir: {}